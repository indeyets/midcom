<?php

class midcom_schema_factory {

    protected $schema;
    protected $moduleRoot;
    protected $type;

    public function __construct (  $schema, $moduleRoot,$type   )
    {
        $this->schema = $schema;
        $this->moduleRoot = $moduleRoot;
        $this->type = $type;
        $this->load_schemaapi(  );
        $this->dms = new midcom_helper_schemaapi_schema(  );
    }

    public function write(  ) {

        $this->dms->set_description( "Autogenerated schema for " . $this->type );

        foreach ( $this->schema->getProperties(  )  as $property) {
            $field = new midcom_helper_schemaapi_field( $property->getAttribute( 'name' ), 
                                                        $property->getAttribute( 'name' ),
                                                        ucfirst(  $property->getAttribute( 'name' ) ) 
                                                        );
            $type =  $property->getAttribute( 'type' ) ;
            $link = $property->getAttribute( 'link' );
            $parentfield = $property->getAttribute( 'parentfield' );

            if ( $type ) 
            {
                $this->set_type( $field, $type );
            }

            if ( $link || $parentfield ) 
            {
                echo "todo: handle up and link fields.\n";
                return;
            }

            $this->dms->add_field( $field );
        }

        $storage = $this->dms->asString( );
        
        file_put_contents( $this->moduleRoot . "/config/schemadb_{$this->type}.inc", $storage);

    }

    protected function set_type( $field , $mgdType) 
    {
        $type = "midcom_helper_schemaapi_type_" .  $this->typeMap[$mgdType];
        $widget = "midcom_helper_schemaapi_widget_" . $this->widgetMap[$mgdType];
        $field->set_type( new $type  );
        $field->set_widget( new $widget );


    }
    
    protected $typeMap = array( 
            'string' => 'text',
            'longtext' => 'text',
            'datetime' => 'date',
            'integer' => 'number',
            'unsigned integer' => 'number',
            'password' => 'password',
            );
    protected $widgetMap = array ( 
            'string' => 'text',
            'longtext' => 'tinymce',
            'datetime' => 'jsdate',
            'integer' => 'text',
            'unsigned integer' => 'text',
            'password' => 'password',

            );
    protected function load_schemaapi (  ) 
    {
        require_once dirname( __FILE__ ) . '/../midcom.helper.schemaapi/schema.php';
        foreach ( $this->widgetMap as $mgdType => $widget ) 
        {
            midcom_helper_schemaapi_schema::load_widget( $widget );
        }
        foreach ( $this->typeMap as $mgdType => $type ) 
        {
            midcom_helper_schemaapi_schema::load_type( $type );
        }
    }
}
