midcom.helper.replicator filters
================================

In the filters definition you can define a multidimensional array of filter definitions, first level is keyed by filter plugin name, the values for
the plugins should be arrays of arguments.

Plugins always operate on the final serialized XML, this gives them full control but also makes it possible for them to make the XML invalid in addition to causing other suprises to the unwary user: "here be dragons".

Currently supported plugins are 'str_replace' and 'preg_replace'

## str_replace

Like preg_replace (see below) but it calls [str_replace][2] in stead.

[2]: http://fi.php.net/manual/en/function.str-replace.php


## preg_replace

arguments to this plugin is array of argument arrays, of the following style

    'preg_replace' => array
    (
        array
        (
            'search' => '%foo%',
            'replace' => 'bar',
        ),
        array
        (
            'search' => "%(href|src)=([\"'])(https?://.*?)?/PREFIX/(.*?)\\2%msi",
            'replace' => '\\1=\\2/\\4\\2',
        ),
    ),

The for each array 'search' key is used as the 'pattern' and 'replace' key as the 'replacement' for [preg_replace][1]. In reality these are mapped into single preg_replace -call with arrays as arguments to improve performance but the idea is the same.

In this example we first do trivial 'foo' -> 'bar' replace that would be better served with str_replace, the second one is more useful, we convert URLS that have /PREFIX/ in them to relative ones with /PREFIX stripped. This kind of replacement could be used for example if there is one SSL staging server for multiple sites having running prefixed hosts but the live sites are unprefixed in their respective domains.

[1]: http://fi.php.net/manual/en/function.preg-replace.php

