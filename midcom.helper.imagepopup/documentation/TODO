
TODO :
* you shouldn't add upload fields there, you won't have any postprocessing whatsoever thus dropping our "philosophy" regarding image handling (ensure web types etc). we can always add this later again when we go for full asset management.
* It seems that the l10n lookups fail (i get a {$lang_imagepopup_desc}) in the toolbar tooltip
* It doesn't work cleanly with IE: the window doesn't close after inserting an image.
* in IE window resizing doesn't work
* smaller font sizes and display the image size as well

* Make upload image configurable
* Make uplaod a dm2 schema


17:20 < torben> use the current language (get_current_lang) call from i18n
17:20 < torben> it should deliver a standard two-letter language code
17:20 < torben> i use that one to bind tinymce to the language already
17:20 < torben> or is there some difference here?
17:20 < torben> it used to work with HtmlArea and JSDate at least
17:20 < tarjei> I thought this was only an issue with norwegian codes, and added a fix for it, I didn't change anything else wrt language.
17:21 < tarjei> take alook at the generated configuration. My "fix" might be wrong.
17:22 < torben> isn't the official code for norwegian no ?
17:22 < torben> apart from that it looks good
17:22 < tarjei> With regard to 1) I am not sure I agree with you. There is a general need to add images outside the "normal" imagelist.
17:23 < tarjei> re no: norwegian has two dialects bokmaal and nynorsk - nb and nn.
17:23 < tarjei> that is why I had to make that change.
17:23 < torben> tarjei: 1 at needs discussing i agree there
17:23 < torben> but currently i would not do it
17:24 < torben> at least not with any "binding" to the client component
17:24 < torben> i am not sure if this couldn't introduce more problems then it'd solve
17:24 < torben> of course, we can compromise: is it hard to make this configurable?
17:24 < tarjei> nope
17:25 < tarjei> what we could do, is to define a special namespace for the images and then use the new "multiimage" widget
17:25 < tarjei> thus also making it possible to add some processing to those images as well.
17:25 < torben> you don't need namespacing, attachment names are no longer unique in midcom
17:26 < torben> (mgdschema doesn't check it and i have decided to not add such a check)
17:26 < torben> my types all use guids to track images.
17:26 < torben> but your idea isn't bad:
17:26 < torben> what you could do is just use DM2 for it
17:26 < torben> creat a simple dm2 schema with a single images type in it
17:27 < torben> create a datamanager instance and use the setimage calls of the type to add images to it (you don't need the formmanager / widget here obviously)
17:27 < torben> cavets:
17:27 < torben> attachment deletion needs very careful treatment
17:27 < torben> many attachments are grouped together, as you already discovered yourself
17:28 < torben> tarjei: something else
17:28 < tarjei> yes, I was hoping to make a way to mark the groups
17:28 < torben> tarjei: would it be an idea to explicitly bind the imagepopup to a images type in the master schema
17:28 < tarjei> ok I got enough for the imagepopup todo now :-)
17:28 < torben> the idea would be:
17:29 < torben> images in the single-image type are almost always placed automatically. having them in the image popup would just "duplicate" them
17:29 -!- pietertje [pietertje@ontwerpteam.xs4all.nl] has quit ["Quitting!"]
17:29 < torben> images in download lists are not intended for web-viewing as well
17:29 < torben> so the only place left where your images could come from are those from the images type (if any) in the schema
17:29 < tarjei> hmm, I think this is a good idea.
17:29 < torben> tarjei: can we agree upon that?
17:29 < torben> as a discussion base i mean
17:30 < tarjei> I'll add the fieldname to the request -> /guid/fieldname
17:30 < torben> no, that is not enough
17:30 < tarjei> and if there is no fieldname, it will default to midcom_images or soemthing like that
17:31 < torben> the more important thing here is that you need to somehow gain access to the schema data
17:31 < tarjei> ok, that wouldn't work?
17:31 < torben> what you want is to bind the popup to the images type found in the schema and _keep_ its configuration
17:31 < torben> so, what we could do is this
17:31 < torben> a) automatically bind the popup to the first images field found in the schema
17:32 < torben> b) when starting up tinymce, put the all relevant information from the schema (essentially $schema->fields[$fieldname]) into a session
17:32 < torben> c) when the imagepopup is called, you can then produce an simplified schema which explicitly binds to just the images field in question (using the session info)
17:33 < torben> and thus d) you'll have a component-configuration schema sensitive image popup
17:33 < torben> you could even e) define imagepopup config options that have to be put into the schema field's customdata section
17:33 < torben> how does that sound
17:33 < tarjei> sounds good. I think that is the way forward.
17:34 < torben> you have to be careful with b) though, you need to make the session key somehow request-specific, so that multiple parallel dm2s doen't interfere with each other
17:34 < tarjei> hmm, true
17:34 < torben> best is perhaps auto-generating some md5 hash from the object guid and some timestamp, which you put into the form data / imagepopup config somehow
17:35 < torben> some central handle
17:35 < torben> shouldn't be hard
17:35 < tarjei> sounds ok. I'll probably keep the current imagehandler as an "advanced option"
17:35 < torben> just don't bind only to the object ID, that could fail in case of two dm2s editing the same object with different schemas (yes, its a rather esoteric case, but it needs covering nevertheless)17:35 < torben> current iamgeshandler?
17:36 < tarjei> yes
17:36 < torben> what do you mean?
17:36  * torben just lost track
17:36 < tarjei> I guess guid+schemaname could work as a key
17:37 < tarjei> wrt to images I'm thinking I'll keep the current way the popup works as an "advanced option" for use when dm2 is not used directly.
17:37 < torben> ah
17:37 < tarjei> That could be usefull the day when spider doesn't work anymore fx.
17:37 < torben> sort of a fallback?#
17:38 < torben> as advanced (as in "no-default") option lilke "show all attachments: true|false" it'd be good, i agree there.
17:38 < tarjei> yes that was the idea
17:38 < torben> ok, i think we have a battleplan then :)
17:39 < tarjei> yep
17:39 < torben> btw: do we actually need the path footer in the default tinymce config?
